install.packages("swirl")
swirl()
library("swirl")
swirl()
swirl()
install.packages('devtools')
initLen = 100
data = as.matrix(read.table('MackeyGlass_t17.txt'))
initLen = 100
data = as.matrix(read.table('MackeyGlass_t17.txt'))
while( dev.cur() != 1 ) dev.off() # close all previous plots
dev.new()
quit()
install.packages('RPostgreSQL')
require('RPostgreSQL')
install.packages("RJDBC")
library('RJDBC')
library('RJDBC')
#connect to Amazon Redshift
driver <- JDBC("com.amazon.redshift.jdbc41.Driver",
"C:\Program Files\Redshift\RedshiftJDBC41-1.1.9.1009.jar", identifier.quote="`")
# url <- "<JDBCURL>:<PORT>/<DBNAME>?user=<USER>&password=<PW>
url <- "    jdbc:redshift://ihs-lake-doppler.cop6dfpxh7ta.us-west-2.redshift.amazonaws.com:5439/lake_one?user=liangk&password=SnowBag11"
conn <- dbConnect(driver, url)
# list tables
dbGetTables(conn)
dbGetQuery(conn,"SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'")
driver <- JDBC("com.amazon.redshift.jdbc41.Driver",
"C:\Program Files\Redshift\RedshiftJDBC41-1.1.9.1009.jar", identifier.quote="`")
driver <- JDBC("com.amazon.redshift.jdbc41.Driver",
"C:\\Program Files\\Redshift\\RedshiftJDBC41-1.1.9.1009.jar", identifier.quote="`")
url <- "    jdbc:redshift://ihs-lake-doppler.cop6dfpxh7ta.us-west-2.redshift.amazonaws.com:5439/lake_one?user=liangk&password=SnowBag11"
conn <- dbConnect(driver, url)
url <- "jdbc:redshift://ihs-lake-doppler.cop6dfpxh7ta.us-west-2.redshift.amazonaws.com:5439/lake_one?user=liangk&password=SnowBag11"
conn <- dbConnect(driver, url)
dbGetTables(conn)
dbGetQuery(conn,"SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'")
dbGetQuery(conn,'select count(*) from alldata')
dbGetQuery(conn,'select count(*) from br_prob')
install.packages('dplyr')
library('RPostgreSQL')
? src_postgres
src_postgres
Sys.getenv('PATH')
Sys.getenv('PATH')
system('g++ -v')
system('where make')
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
install.packages('prophet')
library('prophet')
library(devtools)
devtools::install_github("google/CausalImpact")
install.packages('BoomSpikeSlab')
library(devtools)
devtools::install_github("google/CausalImpact")
install.packages('mice')
install.packages('caret')
install.packages('e1071')
library('zoo')
install.packages('var')
install.packages('vars')
install.packages('lmtest')
install.packages('TTR')
library('TTR')
?decompose
install.packages('forecast')
install.packages('graphics')
ts(1:10, frequency = 4, start = c(1959, 2)) # 2nd Quarter of 1959
?grandertest
?grangertest
library(forcast)
library('forecast')
?grangertest
---
title: "R Notebook"
output: html_notebook
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*.
```{r}
plot(cars)
```
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
clc
clear
cls
cat('\f')
plot(cars)
```{r}
install.packages('shiny')
library('shiny')
plot(cars)
shiny::runApp('//was-2pbs01/Users/mfp53502/Projects/EEA/R/Shiny/pretest_EAA/coeff_ui')
runApp('//was-2pbs01/Users/mfp53502/Projects/EEA/R/Shiny/pretest_EAA/coeff_ui')
runApp('//was-2pbs01/Users/mfp53502/Projects/EEA/R/Shiny/pretest_EAA/coeff_ui')
runApp('//was-2pbs01/Users/mfp53502/Projects/EEA/R/Shiny/pretest_EAA/coeff_ui')
runApp('//was-2pbs01/Users/mfp53502/Projects/EEA/R/Shiny/pretest_EAA/coeff_ui')
install.packages('vembedr')
devtools::install_github("ijlyttle/vembedr")
install.packages(installr)
install.packages('installr')
library('installr')
updateR()
devtools::install_github("ijlyttle/vembedr")
library('installr')
updateR()
install.packages('RJDBC')
install.packages('shiny')
install.packages('ggplot2')
install.packages(c("zoo","xts","forecast","fma","expsmooth","lmtest","tseries","Quandl","fpp","urca"))
install.packages('dplyr')
devtools::install_github("mlr-org/mlr")
install.packages('devtools')
devtools::install_github("mlr-org/mlr")
install.packages('bsts')
library(devtools)
devtools::install_github("google/CausalImpact")
install.packages(c("leaps","bestglm"))
library('dummy')
install.packages('dummy')
install.packages('entropy')
install.packages('outlier')
install.packages('outliers')
install.packages('infotheo')
library('mlr')
head(iris)
library('dummy')
letters <- c( "a", "a", "b", "c", "d", "e", "f", "g", "h", "b", "b" )
dummy(as.character(letters))
dummy(as.character(letters))
dummy(as.character(letters))
letters
dummy(letters[1:6])
?dummy
dummy(letters)
dummy(as.data.frame(letters))
get.dummy(letters)
install.packages('shiny')
shiny::runApp('GitHub/time_series_demo_shiny')
runApp('GitHub/time_series_demo_shiny')
runApp('GitHub/time_series_demo_shiny')
runApp('GitHub/time_series_demo_shiny')
runApp('GitHub/time_series_demo_shiny')
runApp('GitHub/time_series_demo_shiny')
install.packages('ggradar')
devtools::install_github("ricardo-bion/ggradar",
dependencies=TRUE)
library(ggradar)
suppressPackageStartupMessages(library(dplyr))
library(scales)
mtcars %>% add_rownames(var ='group' %>% mutate_each(funs(reshape), -group) %>% tail(4) %>% select(1:10) ->mtcars_radar)
mtcars_radar
head(mtcards)
head(mtcars)
add_rownames(var="group")
add_rownames(mtcars,var="group")
head(mtcars)
?add_rownames
mtcars %>%
column_to_rownames( var = "group" ) %>%
mutate_each(funs(rescale), -group) %>%
tail(4) %>% select(1:10) -> mtcars_radar
?column_to_rownames
mtcars %>%
column_to_rownames( var = "group" ) %>%
mutate_each(funs(rescale), -group) %>%
tail(4) %>% select(1:10) -> mtcars_radar
mtcars %>%
column_to_rowname( var = "group" ) %>%
mutate_each(funs(rescale), -group) %>%
tail(4) %>% select(1:10) -> mtcars_radar
runApp('GitHub/time_series_demo_shiny')
runApp('GitHub/time_series_demo_shiny')
paste0('a',1)
?sliderInput
?sliderInput
ceiling(0.1)
ceiling(0.2)
floor(0.2)
floor(-0.2)
ceiling(-0.2)
round(0.05)
round(0.05,2)
round(0.055,2)
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
?sliderInput
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('R/Shiny/dynamicUI')
runApp('R/Shiny/dynamicUI')
runApp('R/Shiny/dynamicUI')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('R/Shiny/dynamicUI')
library(reshape2)
library(ggplot2)
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
mtcars$mpg
v <- 'mpg'
mtcars$v
mtcars$eval(v)
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('R/Shiny/junk')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
install.packages('fmsb')
library('fmsb')
shiny::runApp('GitHub/feature_selection_matrix_viewer')
install.packages('reshape2')
runApp('GitHub/feature_selection_matrix_viewer')
install.packages('ggplot2')
install.packages('ggplot2')
runApp('GitHub/feature_selection_matrix_viewer')
install.packages('devtools')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
runApp('GitHub/feature_selection_matrix_viewer')
install.packages('dplyr')
runApp('GitHub/feature_selection_matrix_viewer')
getwd()
setwd('./GitHub/feature_selection_matrix_viewer/www')
dir()
data <- read.csv('matrix.csv')
names(data)
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
a <- ['a','b','c']
a
a <- c('a','b','c','d')
?find
find('a',a)
where(a,'a')
where(a='a')
where(a=='a')
which(a=='a')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
?seq
a <- seq(1,10)
a
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
a
a <- c('a','b','c','d')
b <- a[!%in%(a=='b')]
b <- a[![%in%(a=='b')]]
a[1]
b <- a[!%in%which(a=='b')]
b <- a[~%in%which(a=='b')]
b <- a[~%in%(which(a=='b'))]
b <- a[!a%in%c('b')]
b
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
dir()
xymelt <-  read.csv('test.csv')
head(xymelt)
xy <- read.cvs('test.csv')
xy <- read.csv('test.csv')
head(xy)
xy$X <- NULL
head(xy)
vn <- names(xy)
vnselect <- vn[!vn%in%['variableID']]
vnselect <- vn[!vn%in%c('variableID')]
vnselect
xymelt <- melt(xy,id.vars = vnselect)
xymelt
head(xy)
library('reshape2')
t(xy)
xyt <- t(xy)
xyt
xymelt <-  melt(xyt,id.vars = 'variableID')
head(xymelt)
head(xyt)
names(xyt)
rownames(xyt)
xyt[1,]
colnames(xyt) = rownames(xyt)
colnames(xyt) = xyt[1,]
head(xyt)
xyt[1,]=NULL
xytt <- xyt[-c(1)]
xytt
xytt <- xyt[-c(1),]
xytt
head(xytt)
names(xytt)[1]='variableID'
head(xytt)
names(xytt)
colnames(xytt)
rownames(xytt)
names(xytt)
xy
xyt
xymelt <- melt(xyt,id.vars='variableID')
head(xymelt)
xyt
xyt <- xyt[-'variableID',]
xyt <- xyt[-c('variableID'),]
xyt <- xyt[-1,]
xyt
xyt
xymelt <- melt(xyt,id.vars = 1)
xymelt
library(ggplot2)
head(xymelt)
ggplot(xymelt, aes(x=Var1, y = value, color=Var2)) + geom_line()
names(xymelt)
names(xymelt) <- c('metrics','variableID','value')
names(xymelt)
ggplot(xymelt(), aes(x = metrics, y = value, color=variableID)) + geom_line() +
geom_point(data = xymelt(),aes(x = metrics, y = value, color=variableID))
ggplot(xymelt, aes(x = metrics, y = value, color=variableID)) + geom_line() +
geom_point(data = xymelt,aes(x = metrics, y = value, color=variableID))
ggplot(xymelt, aes(x = metrics, y = value, color=variableID)) + geom_line(data = xymelt,aes(x = metrics, y = value, color=variableID)) +
geom_point(data = xymelt,aes(x = metrics, y = value, color=variableID))
xymelt
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
?lapply
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
a
a=c('a','b','c')
b = cbind(a,'a')
b
b = rbind(a,'a')
b
a
b = append(a,'a')
b
b = append('a',a)
b
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
mcars
mcar
a = as.data.frame(matrix(5,ncol=3, nrow = 5))
a
colnames(a) <- c('a','b','c','d')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
xymelt
xy
head(xy)
head(xyt)
head(xymelt)
xymelt <- melt(xyt,id.vars = 1)
head(xymelt)
xyt <- t(xy)
head(xyt)
xyt <- xyt[-c(1),]
xyt
names(xyt) <- rownames(xy)
head(xyt)
rownames(xy)
head(xy)
names(xyt) <- xy['variableID']
head(xyt)
xy['variableID']
colnames(xyt) <- xy['variableID']
colnames(xyt) <- xy['variableID']
length(xy['variableID'])
xy$variableID
colnames(xyt) <- xy$variableID
head(xyt)
rownames(xyt)
colnames(xyt)
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
?dim
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
?as.data.frame
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
?length
a =as.data.frame(matrix(5,nrow=5,ncol=1))
a
plot(a)
plot(t(a))
plot(a$V1)
plot(as.matrix(a))
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
a
a =as.data.frame(matrix(5,nrow=5,ncol=1))
a
a$id <- c('X1','X2','X3','X4','X5')
a
plot(a)
plot(data=a, id~V1)
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
getwd()
d <- read.csv('debug.csv')
d
getwd()
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
?trycatch
?tryCatch
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
devtools::install_github("ricardo-bion/ggradar",
dependencies=TRUE)
devtools::install_github("ricardo-bion/ggradar,dependencies=TRUE)
)
devtools::install_github("ricardo-bion/ggradar",dependencies=TRUE)
runApp('~/GitHub/feature_selection_matrix_viewer')
install.packages('Rttf2pt1')
runApp('~/GitHub/feature_selection_matrix_viewer')
runApp('~/GitHub/feature_selection_matrix_viewer')
